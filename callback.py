import logging
from datetime import datetime
from json import dumps

from aiohttp_requests import requests as async_req
from sqlalchemy import select

from message_schema import Updater
from plugins.core.statemachine import Systems
from plugins.core.config import cfg
from plugins.pg.tables import user_file_id_status
from plugins.middleware import audit, check_user_permission
from plugins.pg.query import delete_user_from_black_list, \
    add_user_to_white_list, select_user_model, update_user_model, \
    insert_user_model, delete_data_from_user_id_status

logging.basicConfig(level=logging.DEBUG)
log = logging.getLogger(__name__)

log.setLevel(logging.DEBUG)


async def permission_message(m: Updater,
                             system: Systems):
    buttons = [
        [
            {

                "text": "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—èü§ì‚ù§",

                "url": "https://youtu.be/k28SlalrkgU",

            }
        ],
        [
            {

                "text": "–ì–æ—Ç–æ–≤–æ‚ù§Ô∏è",

                "callback_data": "–ü–æ–¥–ø–∏—Å–∞–ª—Å—è",

            }
        ]

    ]
    text = "–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ > {} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∏ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, " \
           "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞,  –Ω–∞ –∫–∞–Ω–∞–ª. " \
           "–ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≥–æ—Ç–æ–≤–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –°–ø–∞—Å–∏–±–æ‚ù§ –í—ã –æ—á–µ–Ω—å " \
           "–ø–æ–º–æ–∂–µ—Ç–µ —Ä–∞–∑–≤–∏—Ç–∏—é –ø—Ä–æ–µ–∫—Ç–∞‚ùó".format(cfg.app.constants.numbers_of_attemp)
    await system.bot.send_message(m.get_chat_id(),
                                  text,
                                  inline_keyboard=buttons,
                                  remove_keyboard=True)


async def prepare_photo(m: Updater,
                        systems: Systems):
    chat_id = m.get_chat_id()
    user_id = m.get_user_id()
    username = m.get_username()
    file_id = m.get_file_id()
    status = "PENDING"

    log.debug("–∑–∞—à–ª–∏ –≤ —É—Å–ª–æ–≤–∏–µ –≥–¥–µ –º—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ —Ñ–æ—Ç–æ")
    text = 'üí• –û–∫–µ–π, —è –Ω–∞—á–∏–Ω–∞—é –≥–æ—Ç–æ–≤–∏—Ç—å –¥–ª—è —Ç–µ–±—è —Ñ–æ—Ç–æ.'

    buttons = [
        [
            {

                "text": "–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ªü§ì‚ù§",

                "callback_data": "",

                "url": "https://youtu.be/k28SlalrkgU",

            }
        ],
        [
            {

                "text": "–•–æ—á–µ—à—å –Ω–∞—É—á–∏—Ç—å—Å—è —Ç–∞–∫ –¥–µ–ª–∞—Ç—å?‚ù§Ô∏è",

                "callback_data": "",

                "url": "https://youtu.be/k28SlalrkgU",

            }
        ],
        [
            {
                "text": "–ü—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º? –ü–∏—à–∏‚ù§Ô∏èÔ∏è",

                "callback_data": "",

                "url": "https://t.me/kkkkk_kkk_kkkkk",
            }
        ]
    ]

    query = user_file_id_status.insert().values(
        user_id=user_id,
        chat_id=chat_id,
        username=username,
        date=datetime.now(),
        file_id=file_id,
        status=status
    )

    await systems.pg.fetch(query)

    log.debug("–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É")

    if systems.user_model == "version 1":
        user_model = "version 1 (üî∫ stylization, üîª robustness)"
    else:
        user_model = "version 2 (üî∫ robustness,üîª stylization)"

    payload = {
        "file_id": file_id,
        "chat_id": chat_id,
        "user_id": user_id,
        "user_model": user_model
    }
    await async_req.post(cfg.app.hosts.sheduler.url,
                         data=dumps(payload),
                         ssl=False,
                         headers={'Content-Type': 'application/json'})

    await systems.bot.send_message(m.get_chat_id(),
                                   text,
                                   inline_keyboard=buttons,
                                   remove_keyboard=True)


@check_user_permission()
@audit()
async def hello_message(m: Updater,
                        systems: Systems):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π —É–∫–∞–∑–∞—Ç—å –Ω–∞–≤—ã–∫
    :param systems: –û–±—ä–µ–∫—Ç —Å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏(–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–∞–º –∏ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –∫—ç—à—É)
    :param m: –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    :return: –∫–ª—é—á –∫–æ–ª–±—ç–∫ —Ñ-—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å
    """

    if not systems.permission:
        await permission_message(m=m, system=systems)

        return 1

    chat_id = m.get_chat_id()
    file_id = m.get_file_id()

    await systems.mc.delete(chat_id)

    if file_id:
        await prepare_photo(m=m, systems=systems)
    else:
        # –ø–∏—à–µ–º —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é
        text = "üí• –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –¥–ª—è —Ç–µ–±—è –∞–Ω–∏–º–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –¥–µ—Ä–∂–∞—Ç—å –≤ –∫–∞–¥—Ä–µ —Ç–æ–ª—å–∫–æ –ª–∏—Ü–æ, " \
               "–∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –≤ –ø—Ä–∏–º–µ—Ä–µ. üÜò –ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –ü–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π, –æ–±—Ä–µ–∂—å—Ç–µ " \
               "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–∞ –Ω–µ–π –±—ã–ª–æ —Ç–æ–ª—å–∫–æ –ª–∏—Ü–æ, –∏–Ω–∞—á–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–∏–ª—å–Ω–æ –ø–æ—Å—Ç—Ä–∞–¥–∞–µ—Ç! üÜò –ü—Ä–∏—è—Ç–Ω–æ–≥–æ " \
               "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ‚ùó"

        await systems.bot.send_video(chat_id=chat_id,
                                     file_id="BAACAgIAAxkBAAMGYZ-a0gKp7u-MiET3e47927QHXsoAAlMWAAK-vwFJth7Zpb6XmrUiBA")

        await systems.bot.send_message(chat_id,
                                       text)

        return 1


@check_user_permission()
@audit()
async def processor_photo(m: Updater,
                          systems: Systems):
    if not systems.permission:
        await permission_message(m=m, system=systems)

        return 1

    user_id = m.get_user_id()
    file_id = m.get_file_id()

    query = select([user_file_id_status.c.status]).where(user_file_id_status.c.user_id == user_id)

    arr = [data['status'] for data in await systems.pg.fetch(query)]

    if len(arr) > 0:
        # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –±—ã–ª
        # –µ—Å–ª–∏ –≤ –±–∞–∑–µ –µ—Å—Ç—å –∏–Ω—Ñ—ã –ø–æ —é–∑–µ—Ä—É, —Ç–æ –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—Å–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞
        text = "–ü—Ä–æ—Ü–µ—Å—Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —Ä–∞—Å—á–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ñ–æ—Ç–æ‚ùó"
        await systems.bot.send_message(m.get_chat_id(),
                                       text,
                                       remove_keyboard=True)
    else:
        if file_id:
            await prepare_photo(m=m, systems=systems)
        else:
            text = '–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ. –ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ‚ùó'
            await systems.bot.send_message(m.get_chat_id(),
                                           text,
                                           remove_keyboard=True)
    return 1


async def goodbye_message(m: Updater,
                          systems: Systems):
    text = 'üí• –ü–æ–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –µ—â–µ‚ùóÔ∏è'
    await systems.bot.send_message(m.get_chat_id(),
                                   text,
                                   remove_keyboard=True)
    return 0


@audit()
async def delete_from_ban(m: Updater,
                          systems: Systems):
    add_user_to_white_query = add_user_to_white_list(m.get_user_id())

    await systems.pg.fetch(add_user_to_white_query)

    delete_from_ban_query = delete_user_from_black_list(m.get_user_id())

    await systems.pg.fetch(delete_from_ban_query)

    text = '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª‚ùó –¢–µ–ø–µ—Ä—å –≤—ã –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–πü§ì –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ‚ùó'
    await systems.bot.send_message(m.get_chat_id(),
                                   text,
                                   remove_keyboard=True)

    return 1


@audit()
async def change_model(m: Updater,
                       systems: Systems):
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –µ—Å—Ç—å —Ç–æ –º–µ–Ω—è–µ–º –Ω–∞ –¥—Ä—É–≥–æ
    user_id = m.get_user_id()

    query = select_user_model(user_id)

    data = await systems.pg.fetchval(query)

    if data:
        if data == "version 2":
            new_version = "version 1"

        else:
            new_version = "version 2"

        query = update_user_model(user_id=user_id,
                                  model_version=new_version)
    else:
        new_version = "version 1"
        query = insert_user_model(user_id=user_id,
                                  model_version=new_version)

    await systems.pg.fetch(query)

    text = "–°—Ç–∏–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω‚ùó –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æü§©"

    await systems.bot.send_message(m.get_chat_id(),
                                   text,
                                   remove_keyboard=True)

    return 1


async def delete_data_from_table(m: Updater,
                                 systems: Systems):
    query = delete_data_from_user_id_status()

    await systems.pg.fetch(query)

    text = "–£–¥–∞–ª–µ–Ω–æ!"

    await systems.bot.send_message(m.get_chat_id(),
                                   text,
                                   remove_keyboard=True)

    return 1
